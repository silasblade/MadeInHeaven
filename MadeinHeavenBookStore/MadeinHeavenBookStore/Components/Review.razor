@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using MadeinHeavenBookStore.Models.MVCService
@using MadeinHeavenBookStore.Models.Review
@inject NavigationManager NavigationManager

@inject IJSRuntime JSRuntime

@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Authorization;
@inject ReviewService ReviewService;
@inject IToastService toastService
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider




@foreach (var rv in ReviewComments)
									{
									<div class="flex-w flex-t p-b-68">
										<div class="size-207">
											<div class="flex-w flex-sb-m p-b-17">
												<span class="mtext-107 cl2 p-r-20">
													@rv.email
												</span>

												<span class="fs-18 cl11">
														@for (int i = 0; i < @rv.star; i++)
														{
															<i class="zmdi zmdi-star"></i>
														}
														@for (int i = 0; i < (5 - @rv.star); i++)
														{
															<i class="zmdi zmdi-star-outline"></i>
														}
												</span>

											</div>

											<p class="stext-102 cl6">
												@rv.Comment
											</p>
										</div>
									</div>
									}
									

									<!-- Add review -->
										<h5 class="mtext-108 cl2 p-b-7">
											Add a review
										</h5>


										<form @onsubmit="@Comment">
										<div class="flex-w flex-m p-t-50 p-b-23">
											<span class="stext-102 cl3 m-r-16">
												Your Rating
											</span>

											<span class="wrap-rating fs-18 cl11 pointer">
												<i class="item-rating pointer zmdi zmdi-star-outline"></i>
												<i class="item-rating pointer zmdi zmdi-star-outline"></i>
												<i class="item-rating pointer zmdi zmdi-star-outline"></i>
												<i class="item-rating pointer zmdi zmdi-star-outline"></i>
												<i class="item-rating pointer zmdi zmdi-star-outline"></i>
												<input class="dis-none" type="number" >
												<select @bind="@star"> 
													<option>1</option>
													<option>2</option>
													<option>3</option>
													<option>4</option>
													<option>5</option>
												</select> <i class="item-rating pointer zmdi zmdi-star"></i>
											</span>
										</div>
										<div class="row p-b-25">
											<div class="col-12 p-b-5">
												<label class="stext-102 cl3" for="review">Your review</label>
												<input class="size-110 bor8 stext-102 cl2 p-lr-20 p-tb-10" id="comment" @bind="@comment" required>
											</div>
											<div style="display: none;">
												<input id="id" name="id" value="@id"/> 
											</div>
										</div>
										<button type="submit" class="flex-c-m stext-101 cl0 size-112 bg7 bor11 hov-btn3 p-lr-15 trans-04 m-b-10">
											Submit
										</button>
										</form>


@code {
	private bool IsUserAuthorized;
	[Parameter]  public int id { get; set; }
	public int star;
	public string comment;
	public List<ReviewComment> ReviewComments { get; set; }

	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		IsUserAuthorized = authState.User.IsInRole("Admin");
		await Update();
	}

	public async Task Update()
	{
		ReviewComments = await ReviewService.GetAllReview(id);
	}

	public async Task Comment()
	{
		await ReviewService.saveComment(star, comment, id);
		await Update();
	}
}
