@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using MadeinHeavenBookStore.Models.ShipandCoupon
@using MadeinHeavenBookStore.Models
@using MadeinHeavenBookStore.Models.MVCService
@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Authorization;
@inject ShopCartService ShopCartService;
@inject IToastService toastService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider




	<div class="container">
		<div class="row">
			<div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
				<div class="m-l-25 m-r--38 m-lr-0-xl">
					<div class="wrap-table-shopping-cart" id="wrap-table-shopping-cart">


						<table class="table-shopping-cart" style="display: none;">
							<tr class="table_head">
								<th class="column-1">Product</th>
								<th class="column-2"></th>
								<th class="column-3">Price</th>
								<th class="column-4">Quantity</th>
								<th class="column-5">Total</th>
							</tr>

							@{
								int totalAmount = 0;
							}

							@foreach (var p in shopCarts)
							{
								<tr class="table_row">
									<td class="column-1">
										<form method="#" asp-action="#" asp-controller="#"></form>

										<form method="post" asp-controller="ShoppingCart" asp-action="DeleteinCart" asp-route-id="@p.IdProduct">
											<button type="submit" class="how-itemcart1">
												<img src="@p.Product.imageurl1" alt="IMG">
											</button>
										</form>
									</td>
									<td class="column-2">
										<a asp-controller="ProductDetail" asp-action="ProductDetail" asp-route-id="@p.Product.IdProduct" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
											@p.Product.NameProduct
										</a>
									</td>
									<td class="column-3">VNĐ @p.Product.Price</td>
									<td class="column-4">
										<div class="wrap-num-product flex-w m-l-auto m-r-0">
												<button @onclick="@(c => minus(p.IdProduct))" class=" btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m fs-16 zmdi zmdi-minus"></button>

											<input class="mtext-104 cl3 txt-center num-product" type="number" name="num-product1" value="@p.Quantity">

											<button @onclick="@(c => plus(p.IdProduct))" class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m fs-16 zmdi zmdi-plus"></button>

											<div style="display: none;">@(totalAmount += p.Product.Price * p.Quantity)</div>


										</div>
									</td>

									<td class="column-5">VNĐ @(p.Product.Price * p.Quantity)</td>

								</tr>
							}
							</table>
					<table class="table-shopping-cart">
						<div class="container mt-5">
							<h2>Ship Address</h2>
							<form @onsubmit = "Cash">

								<div class="mb-3">
									<label for="street" class="form-label">Reveiver Name</label>
									<input type="text" class="form-control" @bind=@receiver placeholder="Input Reveiver Name..." required>
								</div>
								<div class="mb-3">
									<label for="street" class="form-label">Street</label>
									<input type="text" class="form-control" @bind=@street placeholder="Input your street..." required>
								</div>

								<div class="mb-3">
									<label for="ward" class="form-label">Wards</label>
									<input type="text" class="form-control" @bind=@ward placeholder="Input your wards..." required>
								</div>

								<div class="mb-3">
									<label for="district" class="form-label">District</label>
									<input type="text" class="form-control" @bind=@district placeholder="Input your district..." required>
								</div>

								<div class="mb-3">
									<label for="city" class="form-label">City</label>
									<input type="text" class="form-control" @bind=@city placeholder="Input your city..." required>
								</div>

								<div class="mb-3">
									<label for="city" class="form-label">Phone Number</label>
									<input type="text" class="form-control" @bind=@phoneNumber placeholder="Input your Phone Number..." required>
								</div>
								<button type="submit" class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer">
									Confirm Cash
								</button>
							</form>



						</div>

						</table>
					</div>





				</div>
			</div>

			<div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
				<div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
					<h4 class="mtext-109 cl2 p-b-30">
						Cart Totals
					</h4>

					<div class="flex-w flex-t bor12 p-b-13">
						<div class="size-208">
							<span class="stext-110 cl2">
								Subtotal:
							</span>
						</div>

						<div class="size-209">
							<span class="mtext-110 cl2">
								VNĐ @totalAmount
							</span>
						</div>
						<div class="size-208">
							<span class="stext-110 cl2">
								Discount:
							</span>
						</div>

						<div class="size-209">
							<span class="mtext-110 cl2">
							- @coupon.discount
							@if (coupon.percent == true)
							{
								<a> %</a>
							}
							else
							{
								<a> VNĐ</a>
							}
							</span>
						</div>

						<div class="size-208">
							<span class="stext-110 cl2">
								Code:
							</span>
						</div>

						<div class="size-209">
							<span class="mtext-110 cl2">
								@coupon.Code
							</span>
						</div>

					<div class="size-208">
						<span class="stext-110 cl2">
							Method:
						</span>
					</div>

					<div class="size-209">
						<span class="mtext-110 cl2">
							@shipMethod.Name
						</span>
					</div>

					<div class="size-208">
						<span class="stext-110 cl2">
							Ship Free:
						</span>
					</div>

					<div class="size-209">
						<span class="mtext-110 cl2">
							+ @shipMethod.price VNĐ
						</span>
					</div>

					</div>


				

					<div class="flex-w flex-t p-t-27 p-b-33">
						<div class="size-208">
							<span class="mtext-101 cl2">
								Total:
							</span>
						</div>

						<div class="size-209 p-t-1">
							<span class="mtext-110 cl2">
								<div style="display: none;">
									@{
									int discount;

									if (coupon.percent == true)
									{
										discount = (totalAmount * coupon.discount / 100);
									}
									else
									{
										discount = @coupon.discount;
									}
										int shipfree = @shipMethod.price;
									}
								</div>

							VNĐ @(totalAmount - discount + shipfree)
							</span>
						</div>
					</div>


					<div class="size-209">
						<span class="stext-110 cl2">
							Ship Method: Quick Ship. About 6 hours, and About 3 day if you are not in Ho Chi Minh City.
						</span>
					</div>
					<div class="size-208">
						<span class="stext-110 cl2">
							Cost:   39000 VNĐ
						</span>
					</div>
					<button @onclick="@(c => appyship(1))" class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
						Choose
					</button>

					<div class="size-209">
						<span class="stext-110 cl2">
							Ship Method: Standard Ship. About 2 days, and About 8 day if you are not in Ho Chi Minh City
						</span>
					</div>
					<div class="size-208">
						<span class="stext-110 cl2">
							Cost:   22000 VNĐ
						</span>
					</div>
					<button @onclick="@(c => appyship(2))" class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
						Choose
					</button>


					
				</div>
			</div>
		</div>
	</div>




@code {
	public List<ShopCart> shopCarts = new List<ShopCart>();
	Coupon coupon = new Coupon();
	public string code;
	public ShipMethod shipMethod = new ShipMethod();
	private bool IsUserAuthorized;
	public string receiver;
	public string street;
	public string ward;
	public string district;
	public string city;
	public string phoneNumber;
	public int returnint;

	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		IsUserAuthorized = authState.User.IsInRole("Admin");

		await Update();
	}
	public async Task Update()
	{
		shipMethod = await ShopCartService.GetShipMethodApply();
		coupon = await ShopCartService.GetCouponApply();
		shopCarts = await ShopCartService.ShoppingCart();
	}

	public async Task plus(int id)
	{
		await ShopCartService.PlusQuantity(id);
		await Update();
	}

	public async Task minus(int id)
	{
		await ShopCartService.MinusQuantity(id);
		await Update();
	}

	public async Task applycode()
	{
		await ShopCartService.ApplyCoupon(code);
		await Update();
	}

	public async Task appyship(int id)
	{
		await ShopCartService.ApplyShip(id);
		await Update();
	}


	public async Task Cash()
	{
		returnint = await ShopCartService.saveOrder(receiver, street, ward, district, city, phoneNumber);
		if(returnint < 0)
		{
			await JSRuntime.InvokeVoidAsync("alert", "There is nothing in Cart!!!");
		}
		else if(returnint > 0)
		{
			NavigationManager.NavigateTo("Order/OrderDetail/" + returnint, true);
		}

		await Update();
	}
}
